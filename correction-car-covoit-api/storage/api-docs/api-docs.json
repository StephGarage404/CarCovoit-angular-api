{
    "openapi": "3.0.0",
    "info": {
        "title": "Car Covoit API",
        "description": "API documentation for Car Covoit",
        "version": "1.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "operationId": "44212a9096e4b09358281e9ec8a0701d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user",
                "operationId": "79854151e609bd20032aa5aa4d5a35c0",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/booking": {
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Book a trip for the authenticated user",
                "operationId": "b8b0690ad82738470115e0952a3f518c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "trip_id"
                                ],
                                "properties": {
                                    "trip_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Trip booked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "trip": {
                                            "$ref": "#/components/schemas/Trip"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trip not found"
                    },
                    "422": {
                        "description": "Validation error or No available seats"
                    }
                }
            }
        },
        "/api/booking/{trip_id}": {
            "delete": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Cancel a trip booking for the authenticated user",
                "operationId": "2d9b460d18085aed16bc7c9fb7b53c61",
                "parameters": [
                    {
                        "name": "trip_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "trip": {
                                            "$ref": "#/components/schemas/Trip"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trip not found or not booked"
                    }
                }
            }
        },
        "/api/trips": {
            "get": {
                "tags": [
                    "Trips"
                ],
                "summary": "Get list of trips",
                "operationId": "86de602ddd5dd7c84c108292769a5ef3",
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Starting point of the trip",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "Ending point of the trip",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Starting date of the trip",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Trip"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Trips"
                ],
                "summary": "Create a new trip",
                "operationId": "5ad82a29119bc627831ed0b3fd4a8367",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Trip"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Trip created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Trip"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/trips/{trip}": {
            "get": {
                "tags": [
                    "Trips"
                ],
                "summary": "Get a trip by ID",
                "operationId": "edd387fb1e7270735a50cfb8e8c03ecf",
                "parameters": [
                    {
                        "name": "trip",
                        "in": "path",
                        "description": "Trip ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Trip"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trip not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Trips"
                ],
                "summary": "Update an existing trip",
                "operationId": "3f7cbb69dbd1cf93d12ad271b43c4107",
                "parameters": [
                    {
                        "name": "trip",
                        "in": "path",
                        "description": "Trip ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Trip"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Trip updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Trip"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Trip not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Trips"
                ],
                "summary": "Delete a trip",
                "operationId": "a349ae8bc4d6ec2805529da055072f9e",
                "parameters": [
                    {
                        "name": "trip",
                        "in": "path",
                        "description": "Trip ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Trip deleted successfully"
                    },
                    "404": {
                        "description": "Trip not found"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "d5af5d957fd5b15976d27088d7f6cc46",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{user}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a single user by ID",
                "operationId": "8ef94a31920758a2ea8c4a11c4a85c73",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing user",
                "operationId": "d8774c2ad802c372cefa655ff2fe989d",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "d2769c9ccb9342ab54329ddb86aa438c",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Trip": {
                "title": "Trip",
                "required": [
                    "starting_point",
                    "ending_point",
                    "starting_at",
                    "available_seats",
                    "price"
                ],
                "properties": {
                    "id": {
                        "description": "Trip ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "starting_point": {
                        "description": "Starting point of the trip",
                        "type": "string"
                    },
                    "ending_point": {
                        "description": "Ending point of the trip",
                        "type": "string"
                    },
                    "starting_at": {
                        "description": "Starting date of the trip",
                        "type": "string",
                        "format": "date"
                    },
                    "available_seats": {
                        "description": "Number of available seats",
                        "type": "integer"
                    },
                    "price": {
                        "description": "Price of the trip",
                        "type": "number",
                        "format": "float"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "description": "Update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "properties": {
                    "firstname": {
                        "description": "The first name of the user",
                        "type": "string",
                        "example": "John"
                    },
                    "lastname": {
                        "description": "The last name of the user",
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "description": "The email of the user",
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "description": "The user's password (hashed)",
                        "type": "string",
                        "example": "$2y$10$abcdefghijklmnopqrstuv"
                    },
                    "avatar": {
                        "description": "The path to the user's avatar",
                        "type": "string",
                        "example": "avatars/1.jpg"
                    },
                    "created_at": {
                        "description": "The time when the user was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01T00:00:00.000Z"
                    },
                    "updated_at": {
                        "description": "The time when the user was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01T00:00:00.000Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "Sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Bookings",
            "description": "Bookings"
        },
        {
            "name": "Trips",
            "description": "Trips"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ],
    "security": [
        {
            "Sanctum": []
        }
    ]
}